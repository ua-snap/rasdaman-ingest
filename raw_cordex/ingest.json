{
  "config": {
    "service_url": "http://localhost:8080/rasdaman/ows",
    "tmp_directory": "/tmp/",
    "crs_resolver": "http://localhost:8080/def/",
    "default_crs": "http://localhost:8080/def/crs/EPSG/0/4326",
    "mock": false,
    "automated": true
  },
  "input": {
    "coverage_id": "cordex_coverage_kyle_test",
    "paths": [
      "data/*.nc"
    ]
  },
  "recipe": {
    "name": "general_coverage",
    "options": {
      "wms_import": true,
      "import_order": "ascending",
      "coverage": {
        "crs": "OGC/0/Index1D?axis-label=\"scenario\"@OGC/0/Index1D?axis-label=\"model\"@OGC/0/AnsiDate@EPSG/0/4326",
        "metadata": {
          "type": "xml",
          "global": {
            "Title": "'Test CORDEX coverage'",
            "Encoding": {
              "test": "test"
            }
          }
        },
        "slicer": {
          "type": "netcdf",
          "pixelIsPoint": true,
          "bands": [
            {
              "name": "tas",
              "identifier": "tas"
            }
          ],
          "axes": {
            "scenario": {
              "statements": "import imp, os; luts = imp.load_source('luts', os.getenv('LUTS_PATH')); regex_str = 'ARC44_(hist|rcp45|rcp85)_tas_(.*)_ERA5bc.nc'",
              "min": "luts.scenarios[regex_extract('${file:name}', regex_str, 1)]",
              "irregular": true,
              "dataBound": false,
              "gridOrder": 3
            },
            "model": {
              "min": "luts.models[regex_extract('${file:name}', regex_str, 2)]",
              "irregular": true,
              "dataBound": false,
              "gridOrder": 4
            },
            "ansi": {
              "statements": "from datetime import datetime, timedelta",
              "min": "(datetime(1976,1,1,12,0,0) + timedelta(days=${netcdf:variable:time:min})).strftime(\"%Y-%m-%dT%H:%M\")",
              "max": "(datetime(1976,1,1,12,0,0) + timedelta(days=${netcdf:variable:time:max})).strftime(\"%Y-%m-%dT%H:%M\")",
              "directPositions": "[(datetime(1976,1,1,12,0,0) + timedelta(days=x)).strftime(\"%Y-%m-%dT%H:%M\") for x in ${netcdf:variable:time}]",
              "gridOrder": 1,
              "type": "ansidate",
              "irregular": true
            },
            "lon": {
              "min": "${netcdf:variable:lon:min}",
              "max": "${netcdf:variable:lon:max}",
              "resolution": "${netcdf:variable:lon:resolution}",
              "gridOrder": 0
            },
            "lat": {
              "min": "${netcdf:variable:lat:min}",
              "max": "${netcdf:variable:lat:max}",
              "resolution": "${netcdf:variable:lat:resolution}",
              "gridOrder": 2
            }
          }
        }
      }
    }
  }
}