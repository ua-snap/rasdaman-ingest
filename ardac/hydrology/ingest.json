{
  "config": {
    "service_url": "http://localhost:8080/rasdaman/ows",
    "tmp_directory": "/tmp/",
    "crs_resolver": "http://localhost:8080/def/",
    "default_crs": "http://localhost:8080/def/crs/EPSG/0/3338",
    "default_null_values": [
      "-9999"
    ],
    "mock": false,
    "automated": true
  },
  "input": {
    "coverage_id": "hydrology",
    "paths": [
      "zipped/*.tif"
    ]
  },
  "recipe": {
    "name": "general_coverage",
    "options": {
      "wms_import": true,
      "import_order": "ascending",
      "coverage": {
        "crs": "OGC/0/Index1D?axis-label=\"variable\"@OGC/0/Index1D?axis-label=\"model\"@OGC/0/Index1D?axis-label=\"scenario\"@OGC/0/Index1D?axis-label=\"month\"@OGC/0/Index1D?axis-label=\"option\"@OGC/0/Index1D?axis-label=\"era\"@EPSG/0/3338",
        "metadata": {
          "type": "xml",
          "global": {
            "Title": "'Hydrology data'",
            "Encoding": {
              "variable": {
                "0": "evap",
                "1": "glacier_melt",
                "2": "iwe",
                "3": "pcp",
                "4": "runoff",
                "5": "sm1",
                "6": "sm2",
                "7": "sm3",
                "8": "snow_melt",
                "9": "swe",
                "10": "tmax",
                "11": "tmin"
              },
              "model": {
                "0": "ACCESS1-3",
                "1": "CCSM4",
                "2": "CSIRO-Mk3-6-0",
                "3": "CanESM2",
                "4": "GFDL-ESM2M",
                "5": "HadGEM2-ES",
                "6": "MIROC5",
                "7": "MPI-ESM-MR",
                "8": "MRI-CGCM3",
                "9": "inmcm4"
              },
              "scenario": {
                "0": "rcp45",
                "1": "rcp85"
              },
              "month": {
                "0": "apr",
                "1": "aug",
                "2": "dec",
                "3": "feb",
                "4": "jan",
                "5": "jul",
                "6": "jun",
                "7": "mar",
                "8": "may",
                "9": "nov",
                "10": "oct",
                "11": "sep"
              },
              "era": {
                "0": "1950-1959",
                "1": "1960-1969",
                "2": "1970-1979",
                "3": "1980-1989",
                "4": "1990-1999",
                "5": "2000-2009",
                "6": "2010-2019",
                "7": "2020-2029",
                "8": "2030-2039",
                "9": "2040-2049",
                "10": "2050-2059",
                "11": "2060-2069",
                "12": "2070-2079",
                "13": "2080-2089",
                "14": "2090-2099"
              }
            }
          }
        },
        "slicer": {
          "type": "gdal",
          "axes": {
            "variable": {
              "statements": "import imp, os; luts = imp.load_source('luts', os.getenv('LUTS_PATH')); regex_str = '(evap|glacier_melt|iwe|pcp|runoff|sm1|sm2|sm3|snow_melt|swe|tmax|tmin)_(?:mm|degC)_(ACCESS1-3|CanESM2|CCSM4|CSIRO-Mk3-6-0|GFDL-ESM2M|HadGEM2-ES|inmcm4|MIROC5|MPI-ESM-MR|MRI-CGCM3)_(rcp45|rcp85)_(apr|aug|dec|feb|jan|jul|jun|mar|may|nov|oct|sep)_(?:max|mean|total)_([0-9]{4}-[0-9]{4})_mean.tif'",
              "min": "luts.variables[regex_extract('${file:name}', regex_str, 1)]",
              "irregular": true,
              "dataBound": false
            },
            "model": {
              "min": "luts.models[regex_extract('${file:name}', regex_str, 2)]",
              "irregular": true,
              "dataBound": false
            },
            "scenario": {
              "min": "luts.scenarios[regex_extract('${file:name}', regex_str, 3)]",
              "irregular": true,
              "dataBound": false
            },
            "month": {
              "min": "luts.months[regex_extract('${file:name}', regex_str, 4)]",
              "irregular": true,
              "dataBound": false
            },
            "era": {
              "min": "luts.eras[regex_extract('${file:name}', regex_str, 5)]",
              "irregular": true,
              "dataBound": false
            },
            "X": {
              "min": "${gdal:minX}",
              "max": "${gdal:maxX}",
              "resolution": "${gdal:resolutionX}"
            },
            "Y": {
              "min": "${gdal:minY}",
              "max": "${gdal:maxY}",
              "resolution": "${gdal:resolutionY}"
            }
          }
        }
      }
    }
  }
}