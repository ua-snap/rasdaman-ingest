{
  "config": {
    "service_url": "https://localhost/rasdaman/ows",
    "tmp_directory": "/tmp/",
    "blocking": true,
    "mock": false,
    "automated": true,
    "track_files": false
  },
  "input": {
    "coverage_id": "cmip6_downscaled_tasmin_wms_crstephenson",
    "paths": [
      "wms_netcdf/tasmin_*.nc"
    ]
  },
  "recipe": {
    "name": "general_coverage",
    "options": {
      "wms_import": true,
      "import_order": "ascending",
      "tiling": "ALIGNED [0:*, 0:*, 0:*, 0:*] tile size 16777216",
      "coverage": {
        "crs": "OGC/0/Index1D?axis-label=\"scenario\"@OGC/0/Index1D?axis-label=\"year\"@EPSG/0/3338",
        "metadata": {
          "type": "xml",
          "global": {
            "Title": "'Downscaled CMIP6 test'"
          },
          "local": {
            "Encoding": "{
              'scenario': {
                '0': 'historical',
                '1': 'ssp585'
              },
              'year': {
                '0': '2000',
                '1': '2100'
              }
            }"
          }
        },
        "slicer": {
          "type": "netcdf",
          "pixelIsPoint": true,
          "bands": [
            {
              "name": "tasmin",
              "identifier": "tasmin",
              "nilValue": "-9999.0"
            }
          ],
          "axes": {
            "scenario": {
              "statements": "import imp, os; luts = imp.load_source('wms_luts', os.getenv('LUTS_PATH')); regex_str = 'tasmin_7ModelAvg_(.*)_mean_(.*)-01.nc';",
	      "min": "luts.scenarios[regex_extract('${file:name}', regex_str, 1)]",
              "irregular": true,
	      "dataBound": false,
              "gridOrder": 0
            },
            "year": {
	      "min": " luts.years[str(regex_extract('${file:name}', regex_str, 2))]",
              "irregular": true,
	      "dataBound": false,
              "gridOrder": 1
            },
            "Y": {
              "min": "${netcdf:variable:y:min}",
              "max": "${netcdf:variable:y:max}",
              "resolution": "${netcdf:variable:y:resolution}",
              "gridOrder": 3
            },
	    "X": {
              "min": "${netcdf:variable:x:min}",
              "max": "${netcdf:variable:x:max}",
              "resolution": "${netcdf:variable:x:resolution}",
              "gridOrder": 2
            }
          }
        }
      }
    }
  }
}
