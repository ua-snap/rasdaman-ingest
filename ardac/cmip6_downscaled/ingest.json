{
  "config": {
    "service_url": "https://localhost/rasdaman/ows",
    "tmp_directory": "/tmp/",
    "blocking": true,
    "mock": false,
    "automated": true,
    "track_files": false,
    "insitu": true
  },
  "input": {
    "coverage_id": "cmip6_downscaled_tasmax_complete_crstephenson",
    "paths": [
      "netcdf_atomic/tasmax_*.nc"
    ]
  },
  "recipe": {
    "name": "general_coverage",
    "options": {
      "wms_import": true,
      "import_order": "ascending",
      "tiling": "ALIGNED [0:*, 0:0, 0:0, 0:31, 0:31] tile size 16777216",
      "coverage": {
        "crs": "OGC/0/Index1D?axis-label=\"model\"@OGC/0/Index1D?axis-label=\"scenario\"@OGC/0/AnsiDate@EPSG/0/3338",
        "metadata": {
          "type": "xml",
          "global": {
            "Title": "'Downscaled CMPI6 test'"
          },
          "local": {
            "Encoding": "{
              'model': {
                '0': 'CNRM-CM6-1-HR',
                '1': 'EC-Earth3-Veg',
                '2': 'GFDL-ESM4',
                '3': 'HadGEM3-GC31-LL',
                '4': 'HadGEM3-GC31-MM',
                '5': 'KACE-1-0-G',
                '6': 'MIROC6',
                '7': 'MPI-ESM1-2-HR',
                '8': 'MRI-ESM2-0',
                '9': 'NorESM2-MM',
                '10': 'TaiESM1'
              },
              'scenario': {
                '0': 'historical',
                '1': 'ssp126',
                '2': 'ssp245',
                '3': 'ssp370',
                '4': 'ssp585'
              }
            }"
          }
        },
        "slicer": {
          "type": "netcdf",
          "pixelIsPoint": true,
          "bands": [
            {
              "name": "tasmax",
              "identifier": "tasmax",
              "nilValue": "-9999.0"
            }
          ],
          "axes": {
            "model": {
              "statements": "import imp, os; luts = imp.load_source('luts', os.getenv('LUTS_PATH')); regex_str = 'tasmax_(.*)_(.*)_adjusted.nc';",
	      "min": "luts.models[regex_extract('${file:name}', regex_str, 1)]",
              "irregular": true,
	      "dataBound": false,
              "gridOrder": 1
            },
            "scenario": {
	      "min": "luts.scenarios[regex_extract('${file:name}', regex_str, 2)]",
              "irregular": true,
	      "dataBound": false,
              "gridOrder": 2
            },
	    "ansi": {
              "statements": "from datetime import datetime; import netCDF4",
              "min": "netCDF4.num2date(${netcdf:variable:time:min}, '${netcdf:variable:time:units}', calendar='noleap').strftime(\"%Y-%m-%dT%H:%M\")",
              "max": "netCDF4.num2date(${netcdf:variable:time:max}, '${netcdf:variable:time:units}', calendar='noleap').strftime(\"%Y-%m-%dT%H:%M\")",
              "directPositions": "[netCDF4.num2date(x, '${netcdf:variable:time:units}', calendar='noleap').strftime(\"%Y-%m-%dT%H:%M\") for x in ${netcdf:variable:time}]",
              "gridOrder": 0,
              "type": "ansidate",
	      "irregular": true
            },
            "Y": {
              "min": "${netcdf:variable:y:min}",
              "max": "${netcdf:variable:y:max}",
              "resolution": "${netcdf:variable:y:resolution}",
              "gridOrder": 4
            },
	    "X": {
              "min": "${netcdf:variable:x:min}",
              "max": "${netcdf:variable:x:max}",
              "resolution": "${netcdf:variable:x:resolution}",
              "gridOrder": 3
            }
          }
        }
      }
    }
  }
}
