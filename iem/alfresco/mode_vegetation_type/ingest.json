{
  "config": {
    "service_url": "https://localhost/rasdaman/ows",
    "tmp_directory": "/tmp/",
    "mock": false,
    "automated": true,
    "track_files": false
  },
  "hooks": [
    {
      "description": "Create Vegetation Type WMS style for Northern Climate Reports",
      "when": "after_import",
      "cmd": ". /etc/default/rasdaman; curl --user $RASCURL \"https://datacubes.earthmaps.io/rasdaman/admin/layer/style/add?COVERAGEID=alfresco_vegetation_mode_statistic&STYLEID=climate_impact_reports&ABSTRACT=Vegetation%20Type%20(NCR)&WCPSQUERYFRAGMENT=&COLORTABLETYPE=ColorMap&\" --data-urlencode \"COLORTABLEDEFINITION={\\\"type\\\":\\\"values\\\",\\\"colorTable\\\":{\\\"-9999\\\":[248,250,240,255],\\\"0\\\":[248,250,240,255],\\\"1\\\":[3,85,0,255],\\\"2\\\":[81,171,0,255],\\\"3\\\":[220,220,103,255],\\\"4\\\":[171,171,2,255],\\\"5\\\":[185,186,133,255],\\\"6\\\":[127,197,218,255],\\\"7\\\":[97,97,97,255],\\\"8\\\":[68,136,68,255]}}\"",
      "abort_on_error": true
    },
    {
      "description": "Create Vegetation Type WMS style for ARDAC",
      "when": "after_import",
      "cmd": ". /etc/default/rasdaman; curl --user $RASCURL \"https://datacubes.earthmaps.io/rasdaman/admin/layer/style/add?COVERAGEID=alfresco_vegetation_mode_statistic&STYLEID=ardac_veg_type&ABSTRACT=Vegetation%20Type&WCPSQUERYFRAGMENT=&COLORTABLETYPE=ColorMap&\" --data-urlencode \"COLORTABLEDEFINITION={\\\"type\\\":\\\"values\\\",\\\"colorTable\\\":{\\\"-9999\\\":[0,0,0,0],\\\"0\\\":[255,255,255,255],\\\"1\\\":[53,85,0,255],\\\"2\\\":[81,171,0,255],\\\"3\\\":[220,220,103,255],\\\"4\\\":[171,171,2,255],\\\"5\\\":[185,186,133,255],\\\"6\\\":[127,197,218,255],\\\"7\\\":[97,97,97,255],\\\"8\\\":[68,136,68,255]}}\"",
      "abort_on_error": true
    }
  ],
  "input": {
    "coverage_id": "alfresco_vegetation_mode_statistic",
    "paths": [
      "mode_vegetation_geotiffs/*.tif"
    ]
  },
  "recipe": {
    "name": "general_coverage",
    "options": {
      "wms_import": true,
      "coverage": {
        "crs": "OGC/0/Index1D?axis-label=\"era\"@OGC/0/Index1D?axis-label=\"model\"@OGC/0/Index1D?axis-label=\"scenario\"@EPSG/0/3338",
        "metadata": {
          "type": "xml",
          "global": {
            "Title": "ALFRESCO Vegetation Mode Statistic"
          },
          "local": {
            "Encoding": {
              "era": {
                "0": "1950-2008",
                "1": "2010-2039",
                "2": "2040-2069",
                "3": "2070-2099"
              },
              "model": {
                "0": "MODEL-SPINUP",
                "1": "GFDL-CM3",
                "2": "GISS-E2-R",
                "3": "IPSL-CM5A-LR",
                "4": "MRI-CGCM3",
                "5": "NCAR-CCSM4"
              },
              "scenario": {
                "0": "historical",
                "1": "rcp45",
                "2": "rcp60",
                "3": "rcp85"
              }
            }
          }
        },
        "slicer": {
          "type": "gdal",
          "axes": {
            "era": {
              "statements": "import imp, os; luts = imp.load_source('luts', os.getenv('LUTS_PATH')); regex_str = '([0-9]{4}-[0-9]{4})_(MRI-CGCM3|MODEL-SPINUP|NCAR-CCSM4|GISS-E2-R|IPSL-CM5A-LR|GFDL-CM3)_(.*?).tif'",
              "min": "luts.eras[regex_extract('${file:name}', regex_str, 1)]",
              "irregular": true,
              "dataBound": false
            },
            "model": {
              "min": "luts.models[regex_extract('${file:name}', regex_str, 2)]",
              "irregular": true,
              "dataBound": false
            },
            "scenario": {
              "min": "luts.scenarios[regex_extract('${file:name}', regex_str, 3)]",
              "irregular": true,
              "dataBound": false
            },
            "X": {
              "min": "${gdal:minX}",
              "max": "${gdal:maxX}",
              "resolution": "${gdal:resolutionX}"
            },
            "Y": {
              "min": "${gdal:minY}",
              "max": "${gdal:maxY}",
              "resolution": "${gdal:resolutionY}"
            }
          }
        }
      }
    }
  }
}
